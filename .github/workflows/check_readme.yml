name: Update README with AI

on:
  workflow_dispatch:

permissions: write-all

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq

      - name: List relevant files
        run: |
          find . -type f \( -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.json" -o -name "*.md" \) \
            ! -path "./node_modules/*" ! -path "./dist/*" \
            ! -name "package-lock.json" ! -name "yarn.lock" \
            > file-list.txt

      - name: Process files in chunks
        run: |
          CHUNK_SIZE=5000  # Limite en caractères par requête
          rm -f summaries.txt
          split -d -a 3 -l 5 file-list.txt file_chunk_

          for file in file_chunk_*; do
            CONTENT=$(cat $(cat $file) 2>/dev/null)
            echo "Processing file chunk: $file"
            echo "Content length: ${#CONTENT} characters"
            PROMPT="Voici un extrait de la codebase:\n\n$CONTENT\n\nRésumé ce code de manière concise."
            ESCAPED_PROMPT=$(jq -Rs <<< "$PROMPT")  # Transforme en JSON valide
            RESPONSE=$(jq -n --arg prompt "$ESCAPED_PROMPT" '{
            model: "gpt-4-turbo",
            messages: [
              {role: "system", content: "Tu es un assistant qui résume du code efficacement."},
              {role: "user", content: $prompt}
            ],
            temperature: 0.7
            }' | curl -s -X POST "https://api.openai.com/v1/chat/completions" \
              -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
              -H "Content-Type: application/json" \
              --data @-)
            echo "$RESPONSE" | jq -r '.choices[0].message.content' >> summaries.txt
            echo "\n---\n" >> summaries.txt
          done

      - name: Generate README from summaries
        run: |
          FINAL_PROMPT="Voici un résumé du projet basé sur son code:\n\n$(cat summaries.txt)\n\nGénère un README clair et bien structuré."
          ESCAPED_PROMPT=$(jq -Rs <<< "$FINAL_PROMPT")  # Transforme en JSON valide
          RESPONSE=$(jq -n --arg prompt "$ESCAPED_PROMPT" '{
          model: "gpt-4-turbo",
          messages: [
            {role: "system", content: "Tu es un expert en documentation technique et tu rédiges des README clairs et précis."},
            {role: "user", content: $prompt}
          ],
          temperature: 0.7
          }' | curl -s -X POST "https://api.openai.com/v1/chat/completions" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -H "Content-Type: application/json" \
            --data @-)          
          echo "$RESPONSE" | jq -r '.choices[0].message.content' > README.md

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          BRANCH_NAME="update-readme-$(date +%Y%m%d-%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV 
          git checkout -b $BRANCH_NAME
          git add README.md
          git commit -m "Update README using OpenAI"
          git push origin $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const branchName = process.env.BRANCH_NAME;

            github.rest.pulls.create({
              owner,
              repo,
              title: "Update README using OpenAI",
              head: branchName,
              base: "main",
              body: "This PR updates the README using OpenAI's API."
            });
